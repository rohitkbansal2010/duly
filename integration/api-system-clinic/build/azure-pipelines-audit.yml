parameters:
  - name: FORCE_RUN_SONAR_CHECK
    type: boolean
    default: false
    displayName: 'Force a launch of SonarCloud analysis.'
  - name: PUBLISH_FROM_FEATURE_BRANCH
    type: boolean
    default: false
    displayName: 'Deploy from feature branch'
  - name: imageRepository
    default: $(Build.Repository.Name)-audit-ingestion
  - name: imageTag
    default: $(Build.BuildNumber)  
  - name: aksServiceConnection
    default: 'duly-d-app-aks'

trigger:
  branches:
    include:
      - dev
      - feature/*
  paths:
    include:
      - src/Audit/*

variables:
  - name: FORCE_RUN_SONAR_CHECK
    value: ${{ parameters.FORCE_RUN_SONAR_CHECK }}
  - name: PUBLISH_FROM_FEATURE_BRANCH
    value: ${{ parameters.PUBLISH_FROM_FEATURE_BRANCH }}
  - name: PROJECT_NAME
    value: '**/Ingestion.csproj'
  - name: UNIT_TESTS_PROJECT_NAME
    value: '**/Ingestion.Tests.csproj'
  - name: ACR_SUBSCRIPTION
    value: 'prd'
  - name: ACR_NAME
    value: 'dulydigitalcr.azurecr.io'
  - name: BUILD_POOL
    value: OnAKS
  - name: aksServiceConnection
    value: ${{ parameters.aksServiceConnection }}
  - name: imageRepository
    value: ${{ parameters.imageRepository }}
  - name: imageTag
    value: ${{ parameters.imageTag }}

resources:
  repositories:
    - repository: yamltemplates
      type: git
      name: 'duly.digital.devops/duly-yaml-templates'

    - repository: scripts
      type: git
      name: 'duly.digital.devops/duly-scripts'

    - repository: terraform-scripts
      type: git
      name: 'terraform-scripts'

    - repository: charts
      type: git
      name: 'duly.digital.devops/duly-aks-helmcharts'

pool:
  name: $(BUILD_POOL)

stages:

- stage: CI
  jobs:
  - job: Analyse
    displayName: Continuous Integration
    pool:
      name: $(BUILD_POOL)
    workspace:
      clean: outputs
    steps:
      - checkout: self

      # Template: Execute CI process for particular project
      - template: child.build/ci-netcore-cli.yml@yamltemplates
        parameters:
          solution: $(PROJECT_NAME)
          unitTestsProject: $(UNIT_TESTS_PROJECT_NAME)
          sonarCloudScanningPath: 'Audit'
          sonarCloudProjectSuffix: 'audit'
          runUnitTests: true
          createCoverageReport: true
          includeDotNetSdkVersionForAzureFunctions: true
  condition: |
    and
    (
      succeeded(),
      or
      (
        eq(variables['Build.Reason'], 'PullRequest'),
        eq(variables['FORCE_RUN_SONAR_CHECK'], 'true'),
        startsWith(variables['Build.SourceBranch'], 'refs/heads/feature')
      )
    ) 

- stage: Build
  dependsOn: []
  jobs:
   - job: Build
     displayName: Build Artifacts
     pool:
       name: $(BUILD_POOL)
     workspace:
       clean: outputs
     steps:
     - checkout: self

     - template: child.build/build-netcore.yml@yamltemplates
       parameters:
         solution: $(PROJECT_NAME)
         unitTestsProject: $(UNIT_TESTS_PROJECT_NAME)       
         vstsFeed: 'duly.digital'
         enableSonarCloudScan: true
         sonarCloudScanningPath: 'Audit'
         sonarCloudProjectSuffix: 'audit'
         runUnitTests: true
         createCoverageReport: true
         dotnetBuild: true
         includeDotNetSdkVersionForAzureFunctions: true

     - task: AzureCLI@2
       displayName: Build a Docker image
       inputs:
         azureSubscription: $(ACR_SUBSCRIPTION)
         scriptType: pscore
         scriptLocation: inlineScript
         inlineScript: |
            az acr build -t "$(ACR_NAME)/$(imageRepository):$(imageTag)" -r "$(ACR_NAME)" -f "$(Build.SourcesDirectory)/$(Build.Repository.Name)/src/Audit/Ingestion/Dockerfile" . 
         workingDirectory: '$(Build.ArtifactStagingDirectory)'

     - task: PowerShell@2
       displayName: 'PowerShell: Set commit tag'
       inputs:
         targetType: filePath
         filePath: '$(Build.SourcesDirectory)/duly-scripts/PowerShell/Add-TagToAdoCommit.ps1'
         arguments: > 
           -PAT $(System.AccessToken)
           -organizationUri $(System.CollectionUri)
           -projectName $(System.TeamProject)
           -repositoryID $(Build.Repository.ID)
           -commitID $(Build.SourceVersion)
           -tagName $(Build.BuildNumber)
           -tagMessage $(Build.BuildNumber)
       continueOnError: true

  condition: |
    and
    (
      succeeded(),
      or
      (
        startsWith(variables['Build.SourceBranch'], 'refs/heads/release'),
        startsWith(variables['Build.SourceBranchName'], 'main'),
        in(variables['Build.SourceBranchName'], 'dev', 'develop', 'development'),
        eq(variables['PUBLISH_FROM_FEATURE_BRANCH'], 'true')
      ),
      ne(variables['Build.Reason'], 'PullRequest')
    )

- stage: dev
  displayName: Deploy on DEV
  dependsOn: Build
  jobs:

    - template: child.jobs/template-helm-upgrade-job.yml@yamltemplates
      parameters: 
        keyVault: 'duly-d-clinic-audit-kv'
        aksServiceConnection: $(aksServiceConnection)
        imageACRName: $(ACR_NAME)
        imageRepository: $(imageRepository)
        imageTag: $(imageTag)
        helmChartsRepo: 'charts'
        helmChartName: 'azure-function'
        helmReleaseName: 'int-clinic-audit-ing'
        aadPodIdCustomName: 'duly-d-component-pod-id'
        env: dev
        chartArgs: >
          --set env.FUNCTIONS_WORKER_RUNTIME="dotnet-isolated"
          --set env.APPINSIGHTS_INSTRUMENTATIONKEY="2d54b52b-8d4a-42a4-a499-d2ec7470910b"
          --set env.ApplicationName="Duly.Clinic.Audit.Ingestion"
          --set env.QueueConnectionString="Endpoint=sb://duly-d-app-ns.servicebus.windows.net/;Authentication=ManagedIdentity"
          --set env.SourceQueue="d-integration-clinic-audit-sbq"
          --set env.LogAnalyticsOptions__LogAnalyticsEntryType="AuditLog"
          --set env.LogAnalyticsClientOptions__WorkspaceId="7d87493a-ac42-4839-9b7f-af30c584fdb4"
          --set env.LogAnalyticsClientOptions__SharedKey="$(LogAnalyticsClientOptions--SharedKey)"
          --set keda.triggerType="azure-servicebus"
          --set keda.metadata.namespace="duly-d-app-ns"
          --set keda.metadata.queueName="d-integration-clinic-audit-sbq"
          --set-string keda.metadata.messageCount="5"
          --set ingress=null
  condition: |
    and
    (
      succeeded(),
      or
      (
        startsWith(variables['Build.SourceBranch'], 'refs/heads/release'),
        startsWith(variables['Build.SourceBranchName'], 'main'),
        in(variables['Build.SourceBranchName'], 'dev', 'develop', 'development'),
        eq(variables['PUBLISH_FROM_FEATURE_BRANCH'], 'true')
      ),
      ne(variables['Build.Reason'], 'PullRequest')
    )


- stage: prd
  displayName: Deploy on PRD
  dependsOn: Build
  jobs:

    - template: child.jobs/template-helm-upgrade-job.yml@yamltemplates
      parameters: 
        keyVault: 'duly-p-clinic-audit-kv'
        aksServiceConnection: 'duly-p-app-aks'
        imageACRName: $(ACR_NAME)
        imageRepository: $(imageRepository)
        imageTag: $(imageTag)
        helmChartsRepo: 'charts'
        helmChartName: 'azure-function'
        helmReleaseName: 'int-clinic-audit-ing'
        aadPodIdCustomName: 'duly-p-component-pod-id'
        env: prd
        chartArgs: >
          --set env.FUNCTIONS_WORKER_RUNTIME="dotnet-isolated"
          --set env.APPINSIGHTS_INSTRUMENTATIONKEY="30a28462-8664-4503-9bb8-2f6bc52aba8f"
          --set env.ApplicationName="Duly.Clinic.Audit.Ingestion"
          --set env.QueueConnectionString="Endpoint=sb://duly-p-app-ns.servicebus.windows.net/;Authentication=ManagedIdentity"
          --set env.SourceQueue="p-integration-clinic-audit-sbq"
          --set env.LogAnalyticsOptions__LogAnalyticsEntryType="AuditLog"
          --set env.LogAnalyticsClientOptions__WorkspaceId="b05dc714-b2ca-45aa-b74d-7d384686c6a5"
          --set env.LogAnalyticsClientOptions__SharedKey="$(LogAnalyticsClientOptions--SharedKey)"
          --set keda.triggerType="azure-servicebus"
          --set keda.metadata.namespace="duly-p-app-ns"
          --set keda.metadata.queueName="p-integration-clinic-audit-sbq"
          --set-string keda.metadata.messageCount="5"
          --set ingress=null
  condition: |
    and
    (
      succeeded(),
      or
      (
        startsWith(variables['Build.SourceBranch'], 'refs/heads/release'),
        startsWith(variables['Build.SourceBranchName'], 'main')
      ),
      ne(variables['Build.Reason'], 'PullRequest')
    )
