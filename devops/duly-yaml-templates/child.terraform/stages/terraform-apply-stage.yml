parameters:
- name: infraSolutionRepo
  type: string

- name: infraSolutionFolder
  type: string

- name: configurationRepo
  type: string

- name: configurationPath
  type: string

- name: globalConfigPathPrefix
  type: string  
  default: ""

- name: envList
  type: object
  default: {}


# Create Terraform Artifact
stages:
- stage: Artifact

  jobs:
  - template: ../jobs/terraform-artifact-jobs.yml
    parameters:
      infraSolutionRepo: ${{ parameters.infraSolutionRepo }}
      infraSolutionFolder: ${{ parameters.globalConfigPathPrefix }}${{ parameters.infraSolutionFolder }}
      configurationRepo: ${{ parameters.configurationRepo }}
      configurationPath: ${{ parameters.globalConfigPathPrefix }}${{ parameters.configurationPath }}
      globalConfigPathPrefix: ${{ parameters.globalConfigPathPrefix }}

# Create loop for Environments list 
- ${{ each environment in parameters.envList }}:


  # Run Terraform Plan stage
  - stage: Plan_${{ environment }}
    displayName: Plan on ${{ environment }}
    dependsOn: Artifact
    variables:
    - group: env.${{ environment }}.terraform
    - group: terraform.modules_rsa_key

    jobs:
    # Call Terraform Plan jobs
    - template: ../jobs/terraform-plan-jobs.yml
      parameters:
        infraSolutionFolder: ${{ parameters.globalConfigPathPrefix }}${{ parameters.infraSolutionFolder }}
        TerraformVarsFile: ${{ environment }}.tfvars


  # Run Terraform Apply stage
  - stage: Apply_${{ environment }}
    displayName: Apply on ${{ environment }}
    dependsOn: Plan_${{ environment }}
    variables:
    - group: env.${{ environment }}.terraform
    - group: terraform.modules_rsa_key

    jobs:
    # Call Terraform Apply jobs
    - template: ../jobs/terraform-apply-jobs.yml
      parameters:
        environment: ${{ environment }}
        infraSolutionFolder: ${{ parameters.globalConfigPathPrefix }}${{ parameters.infraSolutionFolder }}
        TerraformVarsFile: ${{ environment }}.tfvars

    # Run Terraform Destroy stage
  - stage: Destroy_${{ environment }}
    displayName: Destroy on ${{ environment }}
    condition: eq(variables.allow_destroy, true)
    dependsOn: Apply_${{ environment }}
    variables:
    - group: env.${{ environment }}.terraform
    - group: terraform.modules_rsa_key

    jobs:
    # Call Terraform Apply jobs
    - template: ../jobs/terraform-destroy-jobs.yml
      parameters:
        environment: ${{ environment }}
        infraSolutionFolder: ${{ parameters.globalConfigPathPrefix }}${{ parameters.infraSolutionFolder }}
        TerraformVarsFile: ${{ environment }}.tfvars